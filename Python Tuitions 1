如何写整齐且可读性高的程序？
How to write readable code and organizing code？
如何对比程序的优劣？
How to know that one program is better than the other?
如何对比程序的效率？
How to know that one program is more efficient than the other?
如何比较算法的好坏？
How to know that one algorithm is better than the other?

Computers only do what you tell them to do. They're not magical. They don't have a mind.
They just know how to perform calculations really, really quickly. 
But you have to tell them what calculations to do. Computers don't know anything. 
计算机是没有思想的，它能做的只是以很快的速度完成我们给他指定的工作。也就是说，我们必须要告诉计算机要做什么。

这里告诉他需要做的方法就是通过语言，也就是我们这里用的Python，是语言的一种。

我们使用anaconda中的spider来编译我们的程序。打开Anaconda，选择启动spider。
我们可以看到页面有左右两部分组成，左侧是编辑栏，右侧控制台。控制台主要用来观测输出，也可以在里边编辑一些简单的的代码。
一般我们在左侧编辑栏中编辑代码。

对于一些基本的运算，我们直接输入运算就可以了。例如计算 2+5，我们在右侧控制台中直接输入 2+5 然后回车运行，就可以看到 out 5.
我们知道，数学上，数字有几种类型，有整数，小数，等等。在Python里也是一样。有整数型，用int表示。有浮点型，也就是我们说的小数，用float表示。
还有布尔型，用 bool表示，他的值为 Ture 或者 False。还有一类特殊的类型用 Nonetype表示，只有一个值 None。
如果我们想知道一个数值或者一个变量是什么类型，可以用 typ()这个命令，括号里是我们想知道数值或者变量。
例如 type(2) type(2.4) type(Ture) Type(None).

如果我们想把一个数值强制转换成另一个类型，我们可以用期望的类型加括号，括号里是我们要转的数值。例如把整数型3转化为浮点型，我们输入 float(3).得到3.0.
把4.1强制转换成整数型，之要输入 int(4.1)。得到4，舍弃了后面的小数。

当我们使用左边编辑器，如果我们要输出一个结果的话
需要使用 print(). 我们输入 print(4+3),这里输出的直接是7。直接写4+3是看不到任何输出的。

下面我来介绍一下python里的基本运算，
加法 i+j
减法 i-j
乘法 i*j
这三个运算中，i和j两个都是整型，输出的数值就也是整形。如果有一个是浮点型或者两个都是浮点型，那么输出结果就是浮点型。
除法 i/j
结果始终是浮点型。
取余数 i%j
幂运算i**j

明白了一些基本操作，我们来看一下如何给变量赋值。赋值我们直接用等号，等号左侧是符号，右侧是数值。如 pi = 3.14
我们完成赋值操作后，数值3.14就被存放在内存里。同时这个数值和符号 pi绑定，这样我们后面再去调用这个数值的地方就可以直接写pi。

例如我们计算圆的面积，pi = 3.14，radius =1.5，area = pi*(radius**2)。
第一个赋值 3.14被存入内存中，符号pi和这个数值连接，。。。

需要注意的是，我们可以重新赋值来更新符号变量所表示的值，例如，在后面加上
radius = radius+1。这个时候radius+1被存入内存，radius指向新的值2.5.
面积值并不会改变，还是之前的结果，因为我们没有告诉计算机再做一次运算。

以上就是python中的一些基本的操作。下面我们通过两道题目来简单回顾一下。
