上一期我们一起学习了函数用的用法。使用函数可以很大程度上简化我们的代码。
我们用函数定义一个功能，然后在需要实现这个功能的位置调用这个函数就可以了。

这一期，我们来一起学习一种新的数据类型。 叫做复合数据类型。
这类数据类型里面同时包含多种类型的数据，如 整数型，浮点型等等

这一期我们介绍两个符合数据类型，tuples 元组 和 list 列表。
 元组与字符串类似，都是用来表示一串内容。只是元组内的内容可能是任何类型的数据。
我们用小括号开定义并创建元组。例如
t = (2,"tju",3)
元组中不同元素用逗号隔开，不同元素可以是不同的数据类型。
例如这里第一个元素是整数型，第二个元素是字符型。
需要注意的是，元组中的元素是不能修改的，例如
t[1] = 4 报错
另外，当我们想创建只有一个元素的元组时，我们要在这个元素后面多输入一个逗号，
t1 = ("tju",)
否则的话，就会被创建成一个字符串的格式。

与对字符串的操作相似，我们也可以通过命令去索引元组中的每一个元素或者一些元素。
t[0] 2
t[1:2] (“tju”,)
t[1:3] ("tju", 3)

如果想获得元组中元素的个数，我们可以用
len(t)   3
 
我们还可以用加号运算符 + 完成元组的连接操作，例如
(2,"tju",3) + （5, 6）    （2, "tju", 3, 5, 6）

我们使用元组可以实现在函数的定义中传递多个元素。
def quotient_and_remainder(x, y):
    q = x // y
    r = x % y
    return (q, r)

(quot, rem) = quotient_and_remainder(4,5)
print("quot =", quot, "rem =", rem)

这里我们把两个数的商 q 和余数 r 分别作为元组中的两个元素返回，
只要在函数返回值处输入
return(q, r)

另外我们还可以用元组来传递参数，例如想把 q 的值和 r 的值互换，
一般的做法是引入一个临时变量 temp
temp = q
q = r
r = temp
但是，有了元组，我们只需要输入
(r, q) = (q, r)
就可以完成变量值的互换。不需要再借助于一个临时的变量来存储。

元组还可以嵌套定义，例如
a = ((1, "a"),(2, "b"),(3, "c"),(4, "d"))
元组a包含4个元素，没个元素本身又是一个包含两个元素的元组。


y
就可以完成变量值的互换。不需要再借助于一个临时的变量来存储。u
就可以完成变量值的互换。不需要再借助于一个临时的变量来存储。a
就可以完成变量值的互换。不需要再借助于一个临时的变量来存储。n
就可以完成变量值的互换。不需要再借助于一个临时的变量来存储。s
就可以完成变量值的互换。不需要再借助于一个临时的变量来存储。 
就可以完成变量值的互换。不需要再借助于一个临时的变量来存储。


